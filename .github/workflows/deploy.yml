on:
  push:
    branches: [ master, feat/kubernetes ]

name: 🚧 Build, Push to Docker Hub & Deploy to Virtual Machine 🚀
jobs:
  push_to_registry:
    name: 🚀 Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dockerfile: ./apps/gateway/Dockerfile
            image: foopy7774/gateway-ticket
          - dockerfile: ./apps/auth/Dockerfile
            image: foopy7774/auth-ticket-microservice
          - dockerfile: ./apps/user/Dockerfile
            image: foopy7774/user-ticket-microservice
          - dockerfile: ./apps/event/Dockerfile
            image: foopy7774/event-ticket-microservice
          - dockerfile: ./apps/order/Dockerfile
            image: foopy7774/order-ticket-microservice
          - dockerfile: ./apps/search/Dockerfile
            image: foopy7774/search-ticket-microservice

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: 🏗 Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}

      - name: 🚧 Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: "${{ matrix.image }}:latest"
          labels: ${{ steps.meta.outputs.labels }}

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'autopilot-cluster'
          location: 'europe-west1'

      - name: Deploy to GKE
        run: |
          kubectl apply -f ./kubernetes/.
